C auto/WW-G+WW-G+WW-R
(*
 * Result: Never
 * 
 * Process 0 starts (t=100000).
 * 
 * P0 advances one grace period (t=200000).
 * 
 * P1 advances one grace period (t=300001).
 * 
 * P2 goes back a bit less than one grace period (t=201002).
 * 
 * Process 0 start at t=100000, process 3 end at t=201002: Cycle forbidden.
 *)
{
}

P0(int *x0, int *x1)
{
	WRITE_ONCE(*x0, 2);
	synchronize_rcu();
	WRITE_ONCE(*x1, 1);
}


P1(int *x1, int *x2)
{
	WRITE_ONCE(*x1, 2);
	synchronize_rcu();
	WRITE_ONCE(*x2, 1);
}


P2(int *x2, int *x0)
{
	rcu_read_lock();
	WRITE_ONCE(*x2, 2);
	WRITE_ONCE(*x0, 1);
	rcu_read_unlock();
}

exists
(x0=2 /\ x1=2 /\ x2=2)
