LISA TC6
(*
 * Result: Sometimes
 *
 * http://www.cs.umd.edu/~pugh/java/memoryModel/unifiedProposal/testcases.html
 *
 * Decision: Allowed. Intrathread analysis could determine that thread 2
 *	always writes 1 to x and hoist the write to the beginning of thread 2.
 *)
{
x = 0;
y = 0;
}
 P0                 | P1                ;
 r[once] r1 x       | r[once] r2 y      ;
 mov r4 (neq r1 0)  | mov r4 (neq r2 1) ;
 b[] r4 SKIP0       | b[] r4 SKIP1      ;
 w[once] y 1        | w[once] x 1       ;
 SKIP0:             | mov r4 (eq r2 1)  ;
                    | b[] r4 SKIP2      ;
                    | SKIP1:            ;
                    | w[once] x 1       ;
                    | SKIP2:            ;
exists (0:r1=1 /\ 1:r2=1)

